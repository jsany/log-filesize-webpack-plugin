
name: Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    name: Test on node ${{ matrix.node_version }} and ${{ matrix.os }} ðŸ’‰
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node_version: [ "10", "12"]
        os: [ubuntu-latest, windows-latest]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Use Node.js ${{ matrix.node_version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node_version }}

      - name: Npm install, build and test
        run: |
          yarn install
          yarn build
          yarn test

  coverage:
    needs: test
    name: Generate coverage â˜”
    runs-on: ubuntu-latest
    env:
      OS: ubuntu-latest
      NODE: 10
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - uses: actions/setup-node@v1
        with:
          node-version: 10

      - name: Npm install, build, and coverage
        run: |
          yarn install
          yarn build
          yarn coverage

      - name: Upload report ðŸ“·
        uses: codecov/codecov-action@v1
        with:
          # not required for public repos
          # token: ${{ secrets.CODECOV_TOKEN }}
          env_vars: OS,NODE
          name: codecov-umbrella
          fail_ci_if_error: true

  pushTags:
    needs: coverage
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # otherwise, you will failed to push refs to dest repo

      - uses: actions/setup-node@v1
        with:
          node-version: 10

      - name: Version release
        run: |
          yarn install
          yarn release

      - name: Push all tags
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.MY_GITHUB_TOKEN }}
          tags: true